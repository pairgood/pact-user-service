plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'jacoco'
    id 'au.com.dius.pact' version '4.4.6'
}

group = 'com.ecommerce'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    
    // Add Pact consumer dependencies
    testImplementation 'au.com.dius.pact.consumer:junit5:4.4.6'
    testImplementation 'commons-codec:commons-codec:1.15'
}



jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.required = true
        html.outputLocation = file("${buildDir}/reports/jacoco")
    }
}

jacoco {
    toolVersion = "0.8.11"
}

// Pact configuration for Pactflow
pact {
    broker {
        pactBrokerUrl = System.getenv('PACT_BROKER_BASE_URL') ?: 'https://pairgood.pactflow.io'
        pactBrokerToken = System.getenv('PACT_BROKER_TOKEN')
    }
    publish {
        pactDirectory = 'build/pacts'
        tags = ['latest', System.getenv('GIT_BRANCH') ?: 'main']
        version = project.version
    }
}

// New Gradle tasks for Pact consumer testing
task pactTest(type: Test) {
    useJUnitPlatform()
    include '**/*PactTest.*'
    outputs.dir("${project.buildDir}/pacts")
    finalizedBy jacocoTestReport
}

// Update existing test task to exclude Pact tests
tasks.named('test') {
    useJUnitPlatform()
    exclude '**/*PactTest.*'
    finalizedBy jacocoTestReport
}